Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at stencil.c(153,5) inlined into stencil.c(31,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at stencil.c(152,3) inlined into stencil.c(31,3)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at stencil.c(152,3) inlined into stencil.c(31,3)
      remark #15389: vectorization support: reference image_165 has unaligned access   [ stencil.c(154,7) ]
      remark #15388: vectorization support: reference tmp_image_165 has aligned access   [ stencil.c(155,7) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 4
      remark #15399: vectorization support: unroll factor set to 4
      remark #15309: vectorization support: normalized vectorization overhead 0.232
      remark #15301: PERMUTED LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 14 
      remark #15477: vector loop cost: 3.500 
      remark #15478: estimated potential speedup: 3.530 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at stencil.c(152,3) inlined into stencil.c(31,3)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference image_165 has unaligned access   [ stencil.c(154,7) ]
      remark #15388: vectorization support: reference tmp_image_165 has aligned access   [ stencil.c(155,7) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.444
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at stencil.c(152,3) inlined into stencil.c(31,3)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at stencil.c(160,3) inlined into stencil.c(31,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at stencil.c(161,5) inlined into stencil.c(31,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at stencil.c(162,7) inlined into stencil.c(31,3)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at stencil.c(163,9) inlined into stencil.c(31,3)
            remark #15329: vectorization support: scatter was emulated for the variable image_165:  strided by non-constant value   [ stencil.c(165,11) ]
            remark #15305: vectorization support: vector length 8
            remark #15399: vectorization support: unroll factor set to 2
            remark #15300: LOOP WAS VECTORIZED
            remark #15462: unmasked indexed (or gather) loads: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 7 
            remark #15477: vector loop cost: 2.870 
            remark #15478: estimated potential speedup: 2.300 
            remark #15488: --- end vector loop cost summary ---
         LOOP END

         LOOP BEGIN at stencil.c(163,9) inlined into stencil.c(31,3)
         <Remainder loop for vectorization>
            remark #15305: vectorization support: vector length 2
            remark #15309: vectorization support: normalized vectorization overhead 1.667
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at stencil.c(163,9) inlined into stencil.c(31,3)
         <Remainder loop for vectorization>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at stencil.c(36,3)
   remark #15382: vectorization support: call to function stencil(const int, const int, double *, double *) cannot be vectorized   [ stencil.c(37,5) ]
   remark #15382: vectorization support: call to function stencil(const int, const int, double *, double *) cannot be vectorized   [ stencil.c(38,5) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at stencil.c(190,5) inlined into stencil.c(48,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at stencil.c(189,3) inlined into stencil.c(48,3)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at stencil.c(189,3) inlined into stencil.c(48,3)
      remark #15388: vectorization support: reference image_180 has aligned access   [ stencil.c(191,7) ]
      remark #15305: vectorization support: vector length 4
      remark #15399: vectorization support: unroll factor set to 4
      remark #15309: vectorization support: normalized vectorization overhead 2.050
      remark #15301: PERMUTED LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 12 
      remark #15477: vector loop cost: 1.250 
      remark #15478: estimated potential speedup: 6.600 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at stencil.c(189,3) inlined into stencil.c(48,3)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference image_180 has aligned access   [ stencil.c(191,7) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 8.200
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at stencil.c(189,3) inlined into stencil.c(48,3)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at stencil.c(197,3) inlined into stencil.c(48,3)
   remark #15382: vectorization support: call to function fputc(int, FILE *) cannot be vectorized   [ stencil.c(199,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between call:fputc(int, FILE *) line 199 and call:fputc(int, FILE *) line 199
   remark #15346: vector dependence: assumed OUTPUT dependence between call:fputc(int, FILE *) line 199 and call:fputc(int, FILE *) line 199

   LOOP BEGIN at stencil.c(198,5) inlined into stencil.c(48,3)
      remark #15527: loop was not vectorized: function call to fputc(int, FILE *) cannot be vectorized   [ stencil.c(199,7) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: stencil(const int, const int, double *, double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at stencil.c(66,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between tmp_image line 69 and image line 69
   remark #15346: vector dependence: assumed ANTI dependence between image line 69 and tmp_image line 69
LOOP END

LOOP BEGIN at stencil.c(80,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between tmp_image line 85 and tmp_image line 98
   remark #15346: vector dependence: assumed OUTPUT dependence between tmp_image line 98 and tmp_image line 85

   LOOP BEGIN at stencil.c(87,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between tmp_image line 92 and image line 92
      remark #15346: vector dependence: assumed ANTI dependence between image line 92 and tmp_image line 92
   LOOP END
LOOP END

LOOP BEGIN at stencil.c(102,3)
   remark #15423: loop was not vectorized: has only one iteration

   LOOP BEGIN at stencil.c(110,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between tmp_image line 114 and image line 114
      remark #15346: vector dependence: assumed ANTI dependence between image line 114 and tmp_image line 114
   LOOP END
LOOP END
===========================================================================
